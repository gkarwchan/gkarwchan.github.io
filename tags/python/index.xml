<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Ghassan&#39;s Page</title>
    <link>https://www.ghassan.page/tags/python/</link>
    <description>Recent content in python on Ghassan&#39;s Page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 May 2025 18:41:54 -0600</lastBuildDate>
    <atom:link href="https://www.ghassan.page/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simplify Jupyter Projects with Docker or Conda</title>
      <link>https://www.ghassan.page/posts/2025_05_18_jupyter_notebook_startup/</link>
      <pubDate>Sun, 18 May 2025 18:41:54 -0600</pubDate>
      <guid>https://www.ghassan.page/posts/2025_05_18_jupyter_notebook_startup/</guid>
      <description>Managing multiple Jupyter Notebook projects often means juggling different Python libraries and dependencies. Instead of setting up a separate virtual environment and installing Jupyter for each project, I use Docker to streamline the process.
We can use Conda as well, and I will show how, but presonally I prefer Docker.
Create an isolated evivronment for each projectConda offers managing virtual environments, and if you want a tool just to create virtual environments, and install packages, then in my opinion, Conda is the best between others uv, venv, virtualenv, pipenv &amp;hellip;etc.</description>
    </item>
    <item>
      <title>Memoization in Python and JavaScript</title>
      <link>https://www.ghassan.page/posts/2020_09_20_memoization_python_javascript/</link>
      <pubDate>Sun, 20 Sep 2020 09:45:00 +0000</pubDate>
      <guid>https://www.ghassan.page/posts/2020_09_20_memoization_python_javascript/</guid>
      <description>&lt;p&gt;Memoization is a technique that is used a lot in Dynamic Programming and in general to speed up algorithms.&lt;br&gt;
Memoization is the same as caching but in functional programming. The Caching mechanism will store the data into a cache store, and that data can be from anywhere (HTTP page, REST call, &amp;hellip; etc) , where memoization is specific to cache the results of a function, and it create and maintain the store inside the function itself (so the function will be pure function) and send the store as a parameter into the function arguments.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scrubbing Natural Language</title>
      <link>https://www.ghassan.page/posts/2019_09_05_scrubbing_natural_language/</link>
      <pubDate>Thu, 05 Sep 2019 18:41:54 -0600</pubDate>
      <guid>https://www.ghassan.page/posts/2019_09_05_scrubbing_natural_language/</guid>
      <description>Scrubbing a natural language text data is a widely used process that has well defined steps which you will find it in many places. From Lucene which is the Full text search engine that is used in Elastic Search and Azure Search, to any data science project that is processing Natural Language, including different ML projects, and general search projects.
IntroductionA brief introduction to the Data Scrubbing:I am going to cover data scrubbing in more details in comming posts, but just to briefly explain why it is an important step.</description>
    </item>
    <item>
      <title>Python Virtual Environments &amp; Package Management</title>
      <link>https://www.ghassan.page/posts/2018_08_22_python_virtual_environments/</link>
      <pubDate>Wed, 22 Aug 2018 18:41:54 -0600</pubDate>
      <guid>https://www.ghassan.page/posts/2018_08_22_python_virtual_environments/</guid>
      <description>Python virtual environments, and as well package management, has a shaky history, and it has been changing a lot for last few years. Even currently, (early 2018), it is confusing because there are many tools for virtual environments (venv, virtualenv, pyvenv, pyenv). I couldnâ€™t find one tutorial that describe everything in just one place, so I thought, I will write it down. This post is a combination of many official documentation, answers of StackOverflow, and different blog posts that I think will give you comprehensive picture, not only for the virtual environment, but for the package management as well.</description>
    </item>
  </channel>
</rss>
